import{Cam16}from"../hct/cam16";import{Hct}from"../hct/hct";import*as colorUtils from"../utils/color_utils";import*as mathUtils from"../utils/math_utils";class Blend{static harmonize(t,r){var t=Hct.fromInt(t),r=Hct.fromInt(r),a=mathUtils.differenceDegrees(t.hue,r.hue),a=Math.min(.5*a,15),a=mathUtils.sanitizeDegreesDouble(t.hue+a*mathUtils.rotationDirection(t.hue,r.hue));return Hct.from(a,t.chroma,t.tone).toInt()}static hctHue(t,r,a){r=Blend.cam16Ucs(t,r,a),a=Cam16.fromInt(r),r=Cam16.fromInt(t);const o=Hct.from(a.hue,r.chroma,colorUtils.lstarFromArgb(t));return o.toInt()}static cam16Ucs(t,r,a){var t=Cam16.fromInt(t),r=Cam16.fromInt(r),o=t.jstar,m=t.astar,t=t.bstar,s=r.jstar,e=r.astar,r=r.bstar;return Cam16.fromUcs(o+(s-o)*a,m+(e-m)*a,t+(r-t)*a).toInt()}}export{Blend};